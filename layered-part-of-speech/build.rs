use std::io::Write as _;

fn main() -> Result<(), Box<dyn std::error::Error>> {
    let word_types: &[(&[&str], &str)] = &[
        (INFINITIVES, "Verb"),
        (INFINITIVE_OR_NOUNS, "Verb|Noun(Noun::Other)"),
        (PRONOUNS, "Noun(Noun::Pronoun)"),
        (CONJUNCTIONS, "Conjunction"),
        (DETERMINERS, "Determiner"),
    ];

    // rebuild the FST
    let mut v: Vec<_> = INTERPUNCTUATION
        .iter()
        .enumerate()
        .map(|(i, &(s, _))| (s, i as u64))
        .collect();
    let interpunct_len = v.len();
    v.extend(
        DELIMITERS
            .iter()
            .enumerate()
            .map(|(i, &(s, _))| (s, (i + interpunct_len) as u64)),
    );
    let delimit_len = v.len();
    v.extend(
        word_types
            .iter()
            .enumerate()
            .flat_map(|(i, &(words, _))| words.iter().map(move |&w| (w, (i + delimit_len) as u64))),
    );
    v.sort_unstable();

    let fst_path = std::path::Path::new(&std::env::var_os("OUT_DIR").unwrap()).join("words.fst");
    let w = std::io::BufWriter::new(std::fs::File::create(fst_path)?);
    let mut mb = fst::MapBuilder::new(w)?;
    for (w, i) in v {
        mb.insert(w, i)?
    }
    mb.finish()?;

    let tags_path = std::path::Path::new(&std::env::var_os("OUT_DIR").unwrap()).join("tags.rs");
    let mut w = std::io::BufWriter::new(std::fs::File::create(tags_path)?);
    writeln!(w, "static TAGS: &[&[Tag]] = &[")?;
    for (_, name) in INTERPUNCTUATION {
        writeln!(w, "    &[Tag::{}],", name)?;
    }
    for (_, name) in DELIMITERS {
        writeln!(w, "    &[Tag::{}],", name)?;
    }
    for (_, names) in word_types {
        let mut join = false;
        write!(w, "    &[")?;
        for name in names.split('|') {
            if std::mem::replace(&mut join, true) {
                write!(w, ", ")?;
            }
            write!(w, "Tag::{}", name)?;
        }
        writeln!(w, "],")?;
    }
    writeln!(w, "];")?;

    writeln!(
        w,
        "static INTERPUNCTION_RANGE: Range<u64> = 0..{};",
        interpunct_len
    )?;
    //TODO: This is a bit hacky, because it relies on INFINITIVES and INFINITIVE_OR_NOUNS
    // being the first two entries after interpunction.
    writeln!(
        w,
        "static VERBS_RANGE: Range<u64> = {}..{};",
        delimit_len,
        delimit_len + 2
    )?;
    writeln!(
        w,
        "static CONJUNCTION: u64 = {};",
        delimit_len
            + word_types
                .iter()
                .position(|&(_, name)| name == "Conjunction")
                .unwrap()
    )?;
    // only run this if the FST needs to be (re)built
    println!("cargo:rerun-if-changed=build.rs");
    Ok(())
}

static INTERPUNCTUATION: &[(&str, &str)] = &[
    (",", "Comma"),
    (".", "Point"),
    (":", "Colon"),
    (";", "Semicolon"),
    ("!", "ExclamationMark"),
    ("?", "QuestionMark"),
];

static DELIMITERS: &[(&str, &str)] = &[
    ("\"", "Quote"),
    ("(", "OpenParenthesis"),
    (")", "CloseParenthesis"),
];

static CONJUNCTIONS: &[&str] = &[
    "after",
    "before",
    "given",
    "if",
    "once",
    "otherwise",
    "until",
    "when",
    "while",
    "with",
];

static DETERMINERS: &[&str] = &[
    "a",
    "an",
    "another",
    "any",
    "both",
    "each",
    "either",
    "else",
    "every",
    "few",
    "least",
    "much",
    "neither",
    "own",
    "plenty",
    "some",
    "that",
    "the",
    "these",
    "this",
    "those",
    "various",
    "whatever",
    "whichever",
];

static INFINITIVE_OR_NOUNS: &[&str] = &[
    "abandon",
    "account",
    "address",
    "aid",
    "answer",
    "approach",
    "appeal",
    "arch",
    "archive",
    "associate",
    "attack",
    "attempt",
    "bang",
    "base",
    "bear",
    "benefit",
    "block",
    "bomb",
    "boost",
    "bother",
    "bounce",
    "brush",
    "bully",
    "cause",
    "center",
    "challenge",
    "change",
    "charge",
    "chase",
    "call",
    "care",
    "check",
    "claim",
    "claw",
    "clip",
    "close", // TODO: also adjective
    "collapse",
    "comfort",
    "command",
    "concern",
    "conduct",
    "contrast",
    "control",
    "cook",
    "copy",
    "cough",
    "count",
    "cover",
    "crack",
    "credit",
    "cross",
    "crush",
    "cry",
    "damage",
    "dance",
    "dare",
    "date",
    "decline",
    "decrease",
    "defeat",
    "defect",
    "demand",
    "depart",
    "deposit",
    "design",
    "desire",
    "dip",
    "display",
    "divide",
    "divorce",
    "doubt",
    "drain",
    "dress",
    "drift",
    "dump",
    "echo",
    "envy",
    "estimate",
    "exchange",
    "exercise",
    "experience",
    "export",
    "express",
    "favor",
    "fear",
    "feature",
    "figure",
    "file",
    "finish",
    "fit",
    "fix",
    "flash",
    "float",
    "flood",
    "flow",
    "focus",
    "fold",
    "force",
    "forecast",
    //    "form", TODO: This is also a service noun and we cannot accept multiple definitions yet.
    "fracture",
    "function",
    "gain",
    "gaze",
    "gloss",
    "go",
    "grab",
    "grasp",
    "grip",
    "guarantee",
    "guard",
    "guess",
    "guide",
    "handle",
    "harm",
    "hate",
    "head",
    "heat",
    "help",
    "hire",
    "honor",
    "hope",
    "host",
    "hunt",
    "hurry",
    "implement",
    "import",
    "increase",
    "influence",
    "install",
    "issue",
    "jam",
    "judge",
    "jump",
    "kick",
    "kill",
    "kiss",
    "knock",
    "labor",
    "lack",
    "laugh",
    "launch",
    "lecture",
    "lift",
    "limit",
    "link",
    "list",
    "load",
    "loan",
    "lock",
    "look",
    "love",
    "lump",
    "march",
    "market",
    "match",
    "matter",
    "measure",
    "mention",
    "mind",
    "mirror",
    "monitor",
    "move",
    "murder",
    "need",
    "neglect",
    "note",
    "notice",
    "offer",
    "overlap",
    "pack",
    "paint",
    "pass",
    "pause",
    "pick",
    "pile",
    "plan",
    "play",
    "plug",
    "plunge",
    "point",
    "portray",
    "pose",
    "post",
    "praise",
    "press",
    "process",
    "produce",
    "progress",
    "promise",
    "protest",
    "pull",
    "pump",
    "purchase",
    "push",
    "raise",
    "range",
    "rank",
    "reach",
    "reason",
    "recall",
    "record",
    "refactor",
    "refuse",
    "regard",
    "regret",
    "release",
    "rent",
    "repair",
    "reply",
    "report",
    "request",
    "reserve",
    "resolve",
    "resort",
    "rest",
    "return",
    "reveal",
    "reverse",
    "review",
    "reward",
    "risk",
    "roll",
    "ruin",
    "rule",
    "rush",
    "sail",
    "scale",
    "scare",
    "score",
    "scratch",
    "screw",
    "search",
    "sense",
    "share",
    "shiver",
    "shock",
    "shout",
    "side",
    "slam",
    "slip",
    "smell",
    "smile",
    "smoke",
    "sneeze",
    "sort",
    "splash",
    "spoil",
    "sprinkle",
    "stain",
    "stake",
    "stare",
    "start",
    "stay",
    "stem",
    "step",
    "stop",
    "store",
    "strain",
    "stress",
    "stretch",
    "study",
    "supply",
    "support",
    "surge",
    "surprise",
    "suspect",
    "switch",
    "talk",
    "target",
    "taste",
    "test",
    "torture",
    "touch",
    "trade",
    "train",
    "transfer",
    "trap",
    "travel",
    "treat",
    "trick",
    "trust",
    "tune",
    "turn",
    "twist",
    "upgrade",
    "urge",
    "use",
    "value",
    "view",
    "visit",
    "vote",
    "walk",
    "warrant",
    "wash",
    "watch",
    "wave",
    "whistle",
    "wipe",
    "wish",
    "wonder",
    "work",
    "worry",
    "wreck",
    "yawn",
    "yield",
];

// set up an FST to be used in other code
static INFINITIVES: &[&str] = &[
    "accept",
    "accuse",
    "achieve",
    "acknowledge",
    "activate",
    "adapt",
    "add",
    "adjust",
    "admit",
    "adopt",
    "afford",
    "agree",
    "allege",
    "allow",
    "alter",
    "amuse",
    "announce",
    "anticipate",
    "appear",
    "applaud",
    "apply",
    "approve",
    "argue",
    "arrive",
    "ask",
    "assemble",
    "assert",
    "assign",
    "assist",
    "assume",
    "attach",
    "attend",
    "attract",
    "avoid",
    "await",
    "believe",
    "belong",
    "betray",
    "boast",
    "borrow",
    "bury",
    "cancel",
    "careen",
    "carry",
    "cater",
    "cease",
    "cheat",
    "chew",
    "cite",
    "collect",
    "combine",
    "compare",
    "complain",
    "configure",
    "confirm",
    "conform",
    "confront",
    "consider",
    "consist",
    "constitute",
    "contain",
    "continue",
    "contribute",
    "convert",
    "convey",
    "convince",
    "crave",
    "create",
    "decide",
    "declare",
    "deem",
    "define",
    "defy",
    "deliver",
    "deny",
    "depend",
    "depict",
    "describe",
    "deserve",
    "destroy",
    "determine",
    "differ",
    "direct",
    "disagree",
    "disappear",
    "disapprove",
    "discourage",
    "discover",
    "discuss",
    "dislike",
    "dismiss",
    "distinguish",
    "dodge",
    "drag",
    "earn",
    "elect",
    "embody",
    "emerge",
    "emphasize",
    "empower",
    "enable",
    "encourage",
    "end",
    "endure",
    "enforce",
    "engage",
    "enhance",
    "enjoy",
    "enrich",
    "ensure",
    "enter",
    "envision",
    "establish",
    "evaluate",
    "examine",
    "excel",
    "exert",
    "exist",
    "expand",
    "expect",
    "expire",
    "explain",
    "expose",
    "extend",
    "fail",
    "fill",
    "follow",
    "forsee",
    "gather",
    "get",
    "govern",
    "grumble",
    "happen",
    "ignore",
    "imagine",
    "improve",
    "include",
    "indicate",
    "inhabit",
    "inhibit",
    "insist",
    "instruct",
    "interact",
    "interfere",
    "introduce",
    "invent",
    "invest",
    "involve",
    "join",
    "learn",
    "let",
    "like",
    "listen",
    "live",
    "maintain",
    "manage",
    "marry",
    "melt",
    "merge",
    "mingle",
    "minus",
    "misrepresent",
    "multiply",
    "observe",
    "obtain",
    "occur",
    "operate",
    "outweigh",
    "overcome",
    "overtake",
    "overuse",
    "overwhelm",
    "owe",
    "participate",
    "perform",
    "permit",
    "persist",
    "plead",
    "pop",
    "pour",
    "predict",
    "prepare",
    "prevent",
    "print",
    "proclaim",
    "prohibit",
    "provide",
    "publish",
    "pursue",
    "realize",
    "receive",
    "reckon",
    "recognize",
    "reconcile",
    "recycle",
    "reduce",
    "refer",
    "reflect",
    "reject",
    "relate",
    "relax",
    "relent",
    "relive",
    "rely",
    "remain",
    "remember",
    "remind",
    "remove",
    "repeat",
    "replace",
    "represent",
    "require",
    "resemble",
    "resent",
    "resist",
    "restore",
    "restrict",
    "restructure",
    "retain",
    "retire",
    "revel",
    "revert",
    "revoke",
    "roam",
    "save",
    "seem",
    "select",
    "send",
    "serve",
    "settle",
    "skip",
    "strengthen",
    "strive",
    "stumble",
    "submit",
    "suck",
    "suffer",
    "suggest",
    "suppose",
    "surround",
    "survive",
    "tend",
    "thank",
    "threaten",
    "try",
    "undermine",
    "underwhelm",
    "undo",
    "unite",
    "unlock",
    "unpublish",
    "uplift",
    "vary",
    "vie",
    "wander",
    "want",
    "warn",
    "weigh",
    "wither",
];

static PRONOUNS: &[&str] = &[
    "'em",
    "elle",
    "he's",
    "he",
    "him",
    "i",
    "il",
    "it",
    "me",
    "ourselves",
    "she's",
    "she",
    "them",
    "they",
    "thou",
    "us",
    "we",
    "you",
    "yourself",
];
